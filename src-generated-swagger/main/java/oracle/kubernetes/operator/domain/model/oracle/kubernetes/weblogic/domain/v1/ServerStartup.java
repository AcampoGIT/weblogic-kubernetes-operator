/* Copyright (c) 2017, 2018, Oracle and/or its affiliates. All rights reserved. */
/*
 * WebLogicDomain
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package oracle.kubernetes.operator.domain.model.oracle.kubernetes.weblogic.domain.v1;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * ServerStarup describes the desired startup state and passed environment
 * variables for a specific managed server.
 */
@ApiModel(description = "ServerStarup describes the desired startup state and passed environment variables for a specific managed server.")

public class ServerStartup {
  @SerializedName("desiredState")
  private String desiredState = null;

  @SerializedName("serverName")
  private String serverName = null;

  @SerializedName("nodePort")
  private Integer nodePort = null;

  @SerializedName("env")
  private List<io.kubernetes.client.models.V1EnvVar> env = null;

  public ServerStartup desiredState(String desiredState) {
    this.desiredState = desiredState;
    return this;
  }

  /**
   * Desired startup state. Legal values are RUNNING or ADMIN.
   * 
   * @return desiredState
   **/
  @ApiModelProperty(value = "Desired startup state.  Legal values are RUNNING or ADMIN.")
  public String getDesiredState() {
    return desiredState;
  }

  public void setDesiredState(String desiredState) {
    this.desiredState = desiredState;
  }

  public ServerStartup serverName(String serverName) {
    this.serverName = serverName;
    return this;
  }

  /**
   * Managed server name of instance to start.
   * 
   * @return serverName
   **/
  @ApiModelProperty(required = true, value = "Managed server name of instance to start.")
  public String getServerName() {
    return serverName;
  }

  public void setServerName(String serverName) {
    this.serverName = serverName;
  }

  public ServerStartup nodePort(Integer nodePort) {
    this.nodePort = nodePort;
    return this;
  }

  /**
   * Managed server NodePort port. The port on each node on which this managed
   * server will be exposed. If specified, this value must be an unused port. By
   * default, the server will not be exposed outside the Kubernetes cluster.
   * 
   * @return nodePort
   **/
  @ApiModelProperty(value = "Managed server NodePort port.  The port on each node on which this managed server will be exposed.  If specified, this value must be an unused port.  By default, the server will not be exposed outside the Kubernetes cluster.")
  public Integer getNodePort() {
    return nodePort;
  }

  public void setNodePort(Integer nodePort) {
    this.nodePort = nodePort;
  }

  public ServerStartup env(List<io.kubernetes.client.models.V1EnvVar> env) {
    this.env = env;
    return this;
  }

  public ServerStartup addEnvItem(io.kubernetes.client.models.V1EnvVar envItem) {
    if (this.env == null) {
      this.env = new ArrayList<io.kubernetes.client.models.V1EnvVar>();
    }
    this.env.add(envItem);
    return this;
  }

  /**
   * Environment variables to pass while starting this managed server.
   * 
   * @return env
   **/
  @ApiModelProperty(value = "Environment variables to pass while starting this managed server.")
  public List<io.kubernetes.client.models.V1EnvVar> getEnv() {
    return env;
  }

  public void setEnv(List<io.kubernetes.client.models.V1EnvVar> env) {
    this.env = env;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerStartup oracleKubernetesWeblogicDomainV1ServerStartup = (ServerStartup) o;
    return Objects.equals(this.desiredState, oracleKubernetesWeblogicDomainV1ServerStartup.desiredState)
        && Objects.equals(this.serverName, oracleKubernetesWeblogicDomainV1ServerStartup.serverName)
        && Objects.equals(this.nodePort, oracleKubernetesWeblogicDomainV1ServerStartup.nodePort)
        && Objects.equals(this.env, oracleKubernetesWeblogicDomainV1ServerStartup.env);
  }

  @Override
  public int hashCode() {
    return Objects.hash(desiredState, serverName, nodePort, env);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerStartup {\n");

    sb.append("    desiredState: ").append(toIndentedString(desiredState)).append("\n");
    sb.append("    serverName: ").append(toIndentedString(serverName)).append("\n");
    sb.append("    nodePort: ").append(toIndentedString(nodePort)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
