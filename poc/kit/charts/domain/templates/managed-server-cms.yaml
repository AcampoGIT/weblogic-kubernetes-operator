{{- $values := .Values -}}
{{- range $key, $element := $values.managedServerTemplates -}}
{{-   $call := dict "name" $element.podTemplate "values" $values -}}
{{-   include "domain.getPodTemplateValues" $call -}}
{{-   $podVals := $call.return }}
---
kind: ConfigMap
metadata:
  labels:
    weblogic.createdByOperator: "true"
    weblogic.operatorName: {{ $values.operatorNamespace }}
    weblogic.resourceVersion: domain-v1
  name: {{ $values.domainUID }}-{{ $key }}-managed-server-template-cm
  namespace: {{ $values.domainsNamespace }}
data:
  managed-server-pod.yaml: |-
    apiVersion: v1
    kind: Pod
    metadata:
      annotations:
        prometheus.io/path: /wls-exporter/metrics
        prometheus.io/port: "%MANAGED_SERVER_PORT%"
        prometheus.io/scrape: "true"
      labels:
        weblogic.createdByOperator: "true"
        weblogic.domainUID: {{ $values.domainUID }}
        weblogic.resourceVersion: domain-v1
        weblogic.serverName: %MANAGED_SERVER_NAME%
      name: {{ $values.domainUID }}-%MANAGED_SERVER_NAME%
      namespace: {{ $values.domainsNamespace }}
    spec:
      containers:
      - command:
        - /weblogic-operator/scripts/startServer.sh
        env:
        - name: JAVA_OPTIONS
          value: -Dweblogic.StdoutDebugEnabled=false
        - name: USER_MEM_ARGS
          value: '-Xms64m -Xmx256m '
        - name: INTERNAL_OPERATOR_CERT
          value: {{ $values.internalOperatorCert }}
        - name: DOMAIN_UID
          value: {{ $values.domainUID }}
        - name: DOMAIN_NAME
          value: %DOMAIN_NAME%
        - name: DOMAIN_HOME
          value: {{ $values.podDomainHomeDir }}
        - name: DOMAIN_LOGS
          value: {{ $values.podDomainLogsDir }}
        - name: ADMIN_NAME
          value: %ADMIN_SERVER_NAME%
        - name: ADMIN_PORT
          value: "%ADMIN_SERVER_PORT%"
        - name: SERVER_NAME
          value: %MANAGED_SERVER_NAME%
        - name: ADMIN_USERNAME
        - name: ADMIN_PASSWORD
{{- if $podVals.extraEnv }}
{{ toYaml $podVals.extraEnv | trim | indent 8 }}
{{- end }}
        image: {{ $podVals.weblogicImage }}
        imagePullPolicy: {{ $podVals.weblogicImagePullPolicy }}
        lifecycle:
          preStop:
            exec:
              command:
              - /weblogic-operator/scripts/stopServer.sh
        livenessProbe:
          exec:
            command:
            - /weblogic-operator/scripts/livenessProbe.sh
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: weblogic-server
        ports:
        - containerPort: %MANAGED_SERVER_PORT%
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /weblogic-operator/scripts/readinessProbe.sh
          failureThreshold: 1
          initialDelaySeconds: 2
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        volumeMounts:
        - name: weblogic-credentials-volume
          mountPath: /weblogic-operator/secrets
          readOnly: true
        - name: weblogic-domain-cm-volume
          mountPath: /weblogic-operator/scripts
          readOnly: true
        - name: sitcfg-cm-volume
          mountPath: /weblogic-operator/sitcfg
          readOnly: true
{{- if $values.domainLogsPersistentVolumeDir }}
        - name: weblogic-domain-logs-storage-volume
          mountPath: {{ $values.podDomainLogsDir }}
{{- end }}
{{- if $podVals.extraVolumeMounts }}
{{ toYaml $podVals.extraVolumeMounts | trim | indent 8 }}
{{- end }}
      volumes:
      - name: weblogic-credentials-volume
        secret:
          defaultMode: 420
          secretName:  {{ $values.weblogicDomainCredentialsSecretName }}
      - name: weblogic-domain-cm-volume
        configMap:
          defaultMode: 365
          name: weblogic-domain-cm 
      - name: sitcfg-cm-volume
        configMap:
          defaultMode: 365
          name: {{ $values.domainUID }}-%SITCFG_NAME%-cm
{{- if $values.domainLogsPersistentVolumeDir }}
      - name: weblogic-domain-logs-storage-volume
        persistentVolumeClaim:
          claimName: {{ $values.domainUID }}-weblogic-domain-logs-pvc
{{- end }}
{{- if $podVals.extraVolumes }}
{{ toYaml $podVals.extraVolumes | trim | indent 6 }}
{{- end }}
{{- end }}
